plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.10'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.btcupdates"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

    }

    signingConfigs {
        develop {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            storeFile file(properties.getProperty("storeFile"))
            keyAlias properties.getProperty("keyAlias")
            storePassword properties.getProperty("storePassword")
            keyPassword properties.getProperty("keyPassword")
        }
        staging {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            storeFile file(properties.getProperty("storeFile"))
            keyAlias properties.getProperty("keyAlias")
            storePassword properties.getProperty("storePassword")
            keyPassword properties.getProperty("keyPassword")
        }
        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            storeFile file(properties.getProperty("storeFile"))
            keyAlias properties.getProperty("keyAlias")
            storePassword properties.getProperty("storePassword")
            keyPassword properties.getProperty("keyPassword")
        }
    }

    buildTypes {
        develop {
            debuggable true
            minifyEnabled false
            shrinkResources false
            versionNameSuffix "-develop"
            applicationIdSuffix ".develop"
            signingConfig signingConfigs.develop
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'


            Properties properties = new Properties()
            properties.load(project.rootProject.file("./local.properties").newDataInputStream())
            buildConfigField "String", "API_HOST_URL", properties.getProperty("baseApiUrl")
            buildConfigField "String", "FIXER_API_KEY", properties.getProperty("fixerApiKey")
        }
        staging {
            debuggable true
            minifyEnabled true
            shrinkResources true
            versionNameSuffix "-staging"
            applicationIdSuffix ".staging"
            signingConfig signingConfigs.staging
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            buildConfigField "String", "API_HOST_URL", properties.getProperty("baseApiUrl")
            buildConfigField "String", "FIXER_API_KEY", properties.getProperty("fixerApiKey")
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            versionNameSuffix "-release"
            applicationIdSuffix ".release"
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            buildConfigField "String", "API_HOST_URL", properties.getProperty("baseApiUrl")
            buildConfigField "String", "FIXER_API_KEY", properties.getProperty("fixerApiKey")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    kapt {
        correctErrorTypes true
    }
}

dependencies {

    // Jetpack libraries
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"

    // Kotlin serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0")

    // Coil - Image loading
    implementation "io.coil-kt:coil-compose:2.1.0"

    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    //Gson
    implementation 'com.google.code.gson:gson:2.9.1'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.43.2"
    kapt "com.google.dagger:hilt-android-compiler:2.43.2"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"

    /*** TESTING ***/

    //Mock Server
    testImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"

    // Coroutine
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    //Truth
    testImplementation "com.google.truth:truth:1.1.3"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}